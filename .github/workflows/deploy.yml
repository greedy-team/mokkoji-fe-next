name: Deploy (Prod Only)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        env:
          NEXT_PUBLIC_API_URL_PROD: ${{ secrets.NEXT_PUBLIC_API_URL_PROD }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_REPLAY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_REPLAY_DSN }}
          NEXT_PUBLIC_CLARITY_ID: ${{ secrets.NEXT_PUBLIC_CLARITY_ID }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          NEXT_PUBLIC_S3_DOMAIN: ${{ secrets.NEXT_PUBLIC_S3_DOMAIN_PROD }}

        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          envs: NEXT_PUBLIC_API_URL_PROD,NEXT_PUBLIC_SENTRY_DSN,NEXT_PUBLIC_SENTRY_REPLAY_DSN,NEXT_PUBLIC_CLARITY_ID,NEXTAUTH_SECRET,DISCORD_WEBHOOK_URL,NEXT_PUBLIC_S3_DOMAIN
          script: |
            set -e

            # 필수 변수 체크 함수
            require_var() {
              var="$1"
              eval val="\${$var}"
              if [ -z "${val+x}" ]; then
                echo "❌ ERROR: required env '$var' is not set" >&2
                exit 1
              fi
              if [ -z "$val" ]; then
                echo "❌ ERROR: required env '$var' is empty" >&2
                exit 1
              fi
            }

            echo "🚀 Starting production deployment..."

            APP_DIR="/home/ubuntu/mokkoji-fe-prod"
            BRANCH="main"
            APP_NAME="mokkoji-prod"
            PORT=3000
            NODE_ENV="production"
            API_URL="$NEXT_PUBLIC_API_URL_PROD"

            # 환경 변수 검증
            require_var NEXT_PUBLIC_API_URL_PROD
            require_var NEXT_PUBLIC_SENTRY_DSN
            require_var NEXT_PUBLIC_SENTRY_REPLAY_DSN
            require_var NEXT_PUBLIC_CLARITY_ID
            require_var NEXTAUTH_SECRET
            require_var DISCORD_WEBHOOK_URL
            require_var NEXT_PUBLIC_S3_DOMAIN

            echo "✅ All required environment variables are present."

            # 코드 최신화
            cd "$APP_DIR"
            git fetch --all
            git checkout "$BRANCH"
            git pull --ff-only

            # .env.local 생성
            ENV_FILE="$APP_DIR/.env.local"
            rm -f "$ENV_FILE"
            touch "$ENV_FILE"

            echo "📝 Writing .env.local..."
            set +x
            {
              echo "NEXT_PUBLIC_API_URL=$API_URL"
              echo "NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN"
              echo "NEXT_PUBLIC_SENTRY_REPLAY_DSN=$NEXT_PUBLIC_SENTRY_REPLAY_DSN"
              echo "NEXT_PUBLIC_CLARITY_ID=$NEXT_PUBLIC_CLARITY_ID"
              echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET"
              echo "DISCORD_WEBHOOK_URL=$DISCORD_WEBHOOK_URL"
              echo "NEXT_PUBLIC_S3_DOMAIN=$NEXT_PUBLIC_S3_DOMAIN"
            } >> "$ENV_FILE"
            set -x

            echo "✅ .env.local written successfully ($(wc -l < "$ENV_FILE") lines)"

            # 빌드 및 실행
            if command -v pnpm >/dev/null 2>&1; then
              echo "📦 Using pnpm..."
              pnpm install --frozen-lockfile --prefer-offline
              pnpm build
              pm2 restart "$APP_NAME" || pm2 start "pnpm start -- -p $PORT" --name "$APP_NAME" --cwd "$APP_DIR"
            else
              echo "📦 Using npm..."
              npm ci
              npm run build
              pm2 restart "$APP_NAME" || pm2 start "npm run start -- -p $PORT" --name "$APP_NAME" --cwd "$APP_DIR"
            fi

            pm2 save
            echo "🎉 Production deployment complete: $APP_NAME (port $PORT)"
