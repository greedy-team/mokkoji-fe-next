name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      env:
        description: 'Choose environment (dev or prod)'
        required: true
        default: 'dev'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          debug: true
          envs: GITHUB_EVENT_NAME,GITHUB_INPUT_ENV,NEXT_PUBLIC_API_URL_PROD,NEXT_PUBLIC_API_URL_DEV,NEXT_PUBLIC_SENTRY_DSN,NEXT_PUBLIC_SENTRY_REPLAY_DSN,NEXT_PUBLIC_CLARITY_ID,NEXTAUTH_SECRET,DISCORD_WEBHOOK_URL,NEXT_PUBLIC_S3_DOMAIN
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_INPUT_ENV: ${{ github.event.inputs.env }}
          NEXT_PUBLIC_API_URL_PROD: ${{ secrets.NEXT_PUBLIC_API_URL_PROD }}
          NEXT_PUBLIC_API_URL_DEV: ${{ secrets.NEXT_PUBLIC_API_URL_DEV }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_REPLAY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_REPLAY_DSN }}
          NEXT_PUBLIC_CLARITY_ID: ${{ secrets.NEXT_PUBLIC_CLARITY_ID }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          NEXT_PUBLIC_S3_DOMAIN: ${{ secrets.NEXT_PUBLIC_S3_DOMAIN }}
          script: |
            set -ex

            echo "=== START DEPLOYMENT ==="
            echo "EVENT: $GITHUB_EVENT_NAME"
            echo "INPUT ENV: $GITHUB_INPUT_ENV"

            APP_DIR="/home/ubuntu/mokkoji-fe"

            if [ "$GITHUB_EVENT_NAME" = "push" ]; then
              TARGET_ENV="prod"
            else
              TARGET_ENV="$GITHUB_INPUT_ENV"
            fi

            echo "TARGET_ENV=$TARGET_ENV"

            if [ "$TARGET_ENV" = "prod" ]; then
              BRANCH="main"
              APP_NAME="mokkoji-prod"
              PORT=3000
              API_URL="$NEXT_PUBLIC_API_URL_PROD"
              NODE_ENV="production"
            else
              BRANCH="dev"
              APP_NAME="mokkoji-dev"
              PORT=3001
              API_URL="$NEXT_PUBLIC_API_URL_DEV"
              NODE_ENV="development"
            fi

            echo "BRANCH=$BRANCH"
            echo "APP_NAME=$APP_NAME"
            echo "PORT=$PORT"
            echo "API_URL=$API_URL"

            export PNPM_HOME="$HOME/.local/share/pnpm"
            export PATH="$PNPM_HOME:$PATH"

            cd "$APP_DIR"
            echo "📦 Fetching latest code from branch: $BRANCH"
            git fetch --all --prune
            git checkout "$BRANCH" || git checkout -b "$BRANCH" "origin/$BRANCH"
            git reset --hard "origin/$BRANCH"

            echo "📝 Writing .env.local ..."
            cat > .env.local << 'EOF'
NEXT_PUBLIC_API_URL=$API_URL
NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN
NEXT_PUBLIC_SENTRY_REPLAY_DSN=$NEXT_PUBLIC_SENTRY_REPLAY_DSN
NEXT_PUBLIC_CLARITY_ID=$NEXT_PUBLIC_CLARITY_ID
NEXTAUTH_SECRET=$NEXTAUTH_SECRET
DISCORD_WEBHOOK_URL=$DISCORD_WEBHOOK_URL
NEXT_PUBLIC_S3_DOMAIN=$NEXT_PUBLIC_S3_DOMAIN
EOF
            
            # 환경 변수 실제 값으로 치환
            sed -i "s|\$API_URL|$API_URL|g" .env.local
            sed -i "s|\$NEXT_PUBLIC_SENTRY_DSN|$NEXT_PUBLIC_SENTRY_DSN|g" .env.local
            sed -i "s|\$NEXT_PUBLIC_SENTRY_REPLAY_DSN|$NEXT_PUBLIC_SENTRY_REPLAY_DSN|g" .env.local
            sed -i "s|\$NEXT_PUBLIC_CLARITY_ID|$NEXT_PUBLIC_CLARITY_ID|g" .env.local
            sed -i "s|\$NEXTAUTH_SECRET|$NEXTAUTH_SECRET|g" .env.local
            sed -i "s|\$DISCORD_WEBHOOK_URL|$DISCORD_WEBHOOK_URL|g" .env.local
            sed -i "s|\$NEXT_PUBLIC_S3_DOMAIN|$NEXT_PUBLIC_S3_DOMAIN|g" .env.local
            
            echo "Generated .env.local:"
            cat .env.local

            if command -v pnpm >/dev/null 2>&1; then
              echo "🚀 Using pnpm"
              pnpm install --frozen-lockfile --prefer-offline
              pnpm build
              
              # PM2 프로세스 관리 개선
              if pm2 describe "$APP_NAME" > /dev/null 2>&1; then
                echo "Restarting existing PM2 process: $APP_NAME"
                pm2 restart "$APP_NAME"
              else
                echo "Starting new PM2 process: $APP_NAME"
                pm2 start npm --name "$APP_NAME" -- start -- -p "$PORT"
              fi
            else
              echo "🚀 Using npm"
              npm ci
              npm run build
              
              if pm2 describe "$APP_NAME" > /dev/null 2>&1; then
                echo "Restarting existing PM2 process: $APP_NAME"
                pm2 restart "$APP_NAME"
              else
                echo "Starting new PM2 process: $APP_NAME"
                pm2 start npm --name "$APP_NAME" -- start -- -p "$PORT"
              fi
            fi

            pm2 save
            echo "✅ Deployment complete for $APP_NAME ($TARGET_ENV)"