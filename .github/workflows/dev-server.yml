name: Develop Deploy (.next only)

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      cmd:
        description: 'restart | stop | deploy'
        required: true
        default: 'deploy'

jobs:
  dev:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js & pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Write .env.local for build
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL_DEV }}" >> .env.local
          echo "NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}" >> .env.local
          echo "NEXT_PUBLIC_SENTRY_REPLAY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_REPLAY_DSN }}" >> .env.local
          echo "NEXT_PUBLIC_CLARITY_ID=${{ secrets.NEXT_PUBLIC_CLARITY_ID }}" >> .env.local
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.local
          echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> .env.local
          echo "NEXT_PUBLIC_S3_DOMAIN=${{ secrets.NEXT_PUBLIC_S3_DOMAIN_DEV }}" >> .env.local
          echo "NEXTAUTH_URL=https://dev.mokkoji.site" >> .env.local
          echo "✅ .env.local written."

      - name: Set command
        id: control
        run: echo "CMD=${{ github.event.inputs.cmd || 'deploy' }}" >> $GITHUB_ENV

      - name: Clean old .next on EC2
        if: env.CMD == 'deploy'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            APP_DIR="/home/ubuntu/mokkoji-fe-dev"
            echo "Removing old .next folder..."
            cd "$APP_DIR"
            rm -rf .next || true
            echo "✅ Old .next removed."

      - name: Build Next.js
        if: env.CMD == 'deploy'
        run: |
          echo "Installing dependencies..."
          pnpm install --frozen-lockfile --prefer-offline
          echo "Building project..."
          NODE_OPTIONS="--max-old-space-size=4096" pnpm build --no-lint || { echo "Build failed"; exit 1; }
          echo "✅ Build complete."
          ls -alh .next || (echo ".next not found!" && exit 1)
          du -sh .next || true

      - name: Upload new .next to EC2
        if: env.CMD == 'deploy'
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./.next"
          target: /home/ubuntu/mokkoji-fe-dev
        continue-on-error: false
      - name: Confirm upload success
        if: env.CMD == 'deploy'
        run: echo "✅ .next uploaded successfully."

      - name: Restart PM2 on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -e
            APP_DIR="/home/ubuntu/mokkoji-fe-dev"
            APP_NAME="mokkoji-dev"
            PORT=3001
            CMD="${{ github.event.inputs.cmd || 'deploy' }}"

            echo "Running command: $CMD"

            if [ "$CMD" = "deploy" ]; then
              echo "Restarting Dev Server..."
              cd "$APP_DIR"
              pm2 restart "$APP_NAME" || \
                pm2 start "pnpm exec next start -p $PORT" \
                  --name "$APP_NAME" \
                  --cwd "$APP_DIR"
              pm2 save
              echo "✅ Deployment complete (port=$PORT)."

            elif [ "$CMD" = "restart" ]; then
              pm2 restart "$APP_NAME" || true
              echo "✅ Restart complete."
            elif [ "$CMD" = "stop" ]; then
              pm2 stop "$APP_NAME" || true
              pm2 delete "$APP_NAME" || true
              pm2 save || true
              echo "✅ Stop complete."
            fi
